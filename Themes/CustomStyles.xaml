<ResourceDictionary x:Class="Anime_Organizer.Themes.CustomStyles"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="clr-namespace:Anime_Organizer.Themes">


    <Style x:Key="MoreInfoVector" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                        <Canvas Name="More_Info" Width="200" Height="200">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path1" Fill="{DynamicResource ControlForeground}">
                                <Path.Data>
                                    <PathGeometry Figures="M100 0A100 100 0 1 0 200 100 100 100 0 0 0 100 0Zm0 182a82 82 0 1 1 82-82A82 82 0 0 1 100 182Z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path2" Fill="{DynamicResource ControlForeground}">
                                <Path.Data>
                                    <PathGeometry Figures="M113 89v68a13 13 0 0 1-26 0V89a13 13 0 0 1 26 0Z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path3" Fill="{DynamicResource ControlForeground}">
                                <Path.Data>
                                    <PathGeometry Figures="M113 47a13 13 0 1 1-3.81-9.19A13 13 0 0 1 113 47Z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GridLines}"/>
        <Setter Property="BorderThickness" Value="1 0 1 1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid x:Name="Grid" Width="65">
                        <Label Name="Index" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}" Height="45" Content="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Header}"/>
                        <Button x:Name="UpArrow" Margin="0 0 5 23" Width="20" Height="20" HorizontalAlignment="Right" VerticalContentAlignment="Center" Click="Move_Up" Visibility="Hidden">
                            <Path x:Name="ArrowUp" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{DynamicResource ControlForeground}" Margin="3,4,3,3" Stretch="Uniform"/>
                        </Button>
                        <Button x:Name="DownArrow" Margin="0 23 5 0" Width="20" Height="20" HorizontalAlignment="Right" VerticalContentAlignment="Center" Click="Move_Down" Visibility="Hidden">
                            <Path x:Name="ArrowDown" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"  Fill="{DynamicResource ControlForeground}" Margin="3,4,3,3" Stretch="Uniform"/>
                        </Button>
                    </Grid>
                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="Grid" Value="True">
                            <Setter Property="Visibility" TargetName="UpArrow" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="DownArrow" Value="Visible"/>
                            <Setter Property="Padding" TargetName="Index" Value="0 0 20 0"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This version can't re-order the rows. -->
    <Style x:Key="DataGridRowHeaderAlt" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GridLines}"/>
        <Setter Property="BorderThickness" Value="1 0 1 1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid x:Name="Grid" Width="65">
                        <Label Name="Index" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}" Height="45" Content="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Header}"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch">
                        <DockPanel>
                            <ContentPresenter x:Name="contentPresenter" 
                                                  Focusable="False" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="Center" 
                                                  HorizontalAlignment="Center"/>
                            <Grid Name="Cross" Width="20" Height="20" Margin="5 0 0 0" HorizontalAlignment="Right">
                                <Rectangle x:Name="rect1" Width="3" Height="15" Fill="{TemplateBinding Foreground}">
                                    <Rectangle.LayoutTransform>
                                        <RotateTransform Angle="-45"/>
                                    </Rectangle.LayoutTransform>
                                </Rectangle>
                                <Rectangle x:Name="rect2" Width="3" Height="15" Fill="{TemplateBinding Foreground}">
                                    <Rectangle.LayoutTransform>
                                        <RotateTransform Angle="45"/>
                                    </Rectangle.LayoutTransform>
                                </Rectangle>
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MouseOverBorderBrush}"/>
                            <Setter Property="Fill" TargetName="rect1" Value="Red"/>
                            <Setter Property="Fill" TargetName="rect2" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ControlBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ControlBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ControlDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ControlDisabledBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ControlDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
